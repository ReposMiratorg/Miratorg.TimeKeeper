@page "/test"
@rendermode InteractiveServer

<h1>Counter</h1>

<table>
    <tr>
        <td>Сотрудники</td>
        <td>время</td>

        <td>Пн</td>
        <td>Вт</td>
        <td>Ср</td>
        <td>Чт</td>
        <td>Пт</td>
        <td>Сб</td>
        <td>Вс</td>
    </tr>
    @if(employees != null)
    {
        @foreach(var employee in employees)
        {
            <tr>
                <td>@employee.Name</td>
                <td></td>

                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        }
    }
    
</table>

@code {

    [Inject]
    public ITimeKeeperDbContextFactory contextFactory { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }

    private List<EmployeeEntity> employees { get; set; }

    private async Task Load()
    {
        try
        {
            using var context = await contextFactory.Create();
            var data = context.Employees.ToList();
            employees = data;
        }
        catch(Exception ex)
        {
            
        }
    }
}
