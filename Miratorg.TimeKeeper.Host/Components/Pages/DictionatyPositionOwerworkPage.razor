@attribute [RouteAttribute(RoutePages.DICTIONARY_OVERWORK_POSITION)]


<div class="row">
    <div class="col-12">
        <div class="page-title-box">
            <div class="page-title-right">
            </div>
            <h4 class="page-title">Пользовательские виды работ</h4>
        </div>
    </div>
</div>

<div class="row">
    <div class="col">
        <div class="card">
            <div class="card-body">
                <table class="table table-sm">
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            @foreach (var item in typeOverWorkEntities)
                            {
                                <td></td>
                            }
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@code {

    [Inject]
    public ILogger<DictionatyPositionOwerworkPage> Logger { get; set; }

    [Inject]
    public ITimeKeeperDbContextFactory timeKeeperDbContextFactory { get; set; }

    private List<TypeOverWorkEntity> typeOverWorkEntities { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadInfo();
    }

    private async Task LoadInfo()
    {
        try
        {
            using var dbContex = await timeKeeperDbContextFactory.Create();
            typeOverWorkEntities = await dbContex.TypeOverWorks.OrderBy(x => x.Name).Include(x => x.PositionOverworks).ToListAsync();
        }
        catch(Exception ex)
        {
            Logger.LogError(ex, "Ошибка загрузки списка кодов подработки с должностями");
        }
    }
}
