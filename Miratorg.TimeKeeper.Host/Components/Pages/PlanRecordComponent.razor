
<div style="display: flex; position: relative; width: 100%; height:25px; ">
    <div style="display: flex; position: absolute; flex-direction:row; flex-flow: row nowrap; width: 100%; height:25px;  z-index: 1">
        @foreach (var item in plan)
        {
            <div style="width: 100%; background-color: @(item ? @ColorConfig.BackgroundPlan : @ColorConfig.BackgroundDefault);"></div>
        }
    </div>
    <div style="display: flex; position: absolute; flex-direction:row; flex-flow: row nowrap; justify-content: center; align-items: center;height:25px; width: 100%; z-index: 2">
        <a>@interval</a>
    </div>

</div>

@code {
    [Parameter]
    public List<PlanDetailModel> PlanedIntervals { get; set; }

    [CascadingParameter(Name = "CurrentDate")]
    public DateTime CurrentDate { get; set; }

    bool[] plan { get; set; } = new bool[24];

    protected override void OnParametersSet()
    {
        SetHourValue();
    }

    private string interval { get; set; }

    private void SetHourValue()
    {
        plan = new bool[24];
        interval = string.Empty;
        foreach (var planInterval in PlanedIntervals)
        {
            if (CurrentDate.AddDays(1) >= planInterval.OriginalBegin && CurrentDate <= planInterval.OriginalEnd)
            {
                var time = (planInterval.OriginalEnd - planInterval.OriginalBegin).TotalHours;
                if(time > 3)
                {
                    time = time - 1;
                }

                interval = $"{planInterval.OriginalBegin.ToString("HH:mm")} - {planInterval.OriginalEnd.ToString("HH:mm")}";
                var date = CurrentDate;
                for (int i = 0; i < 24; i++)
                {
                    if (TimeKeeperConverter.CheckInterval(date, planInterval.OriginalBegin, planInterval.OriginalEnd))
                    {
                        plan[i] = true;
                    }

                    date = date.AddHours(1);
                }
            }
        }
    }
}
